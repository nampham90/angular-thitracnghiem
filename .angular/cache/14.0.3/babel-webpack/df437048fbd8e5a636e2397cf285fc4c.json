{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/user.service\";\nimport * as i2 from \"@angular/material/sidenav\";\nconst _c0 = [\"sidenav\"];\nexport let BoardUserComponent = /*#__PURE__*/(() => {\n  class BoardUserComponent {\n    constructor(userService) {\n      this.userService = userService;\n      this.opened = true;\n    }\n\n    ngOnInit() {\n      this.userService.getUserBoard().subscribe(data => {\n        this.content = data;\n      }, err => {\n        this.content = JSON.parse(err.error).message;\n      });\n      console.log(window.innerWidth);\n\n      if (window.innerWidth < 768) {\n        this.sidenav.fixedTopGap = 55;\n        this.opened = false;\n      } else {\n        this.sidenav.fixedTopGap = 55;\n        this.opened = true;\n      }\n    }\n\n    onResize(event) {\n      if (event.target.innerWidth < 768) {\n        this.sidenav.fixedTopGap = 55;\n        this.opened = false;\n      } else {\n        this.sidenav.fixedTopGap = 55;\n        this.opened = true;\n      }\n    }\n\n    isBiggerScreen() {\n      const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\n      if (width < 768) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  }\n\n  BoardUserComponent.ɵfac = function BoardUserComponent_Factory(t) {\n    return new (t || BoardUserComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n  };\n\n  BoardUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BoardUserComponent,\n    selectors: [[\"app-board-user\"]],\n    viewQuery: function BoardUserComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sidenav = _t.first);\n      }\n    },\n    hostBindings: function BoardUserComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"resize\", function BoardUserComponent_resize_HostBindingHandler($event) {\n          return ctx.onResize($event);\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    decls: 5,\n    vars: 0,\n    consts: [[1, \"example-container\"], [\"mode\", \"side\", \"opened\", \"true\"]],\n    template: function BoardUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-drawer-container\", 0)(1, \"mat-drawer\", 1);\n        i0.ɵɵtext(2, \"Drawer content\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-drawer-content\");\n        i0.ɵɵtext(4, \"Main content\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    dependencies: [i2.MatDrawer, i2.MatDrawerContainer, i2.MatDrawerContent]\n  });\n  return BoardUserComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}