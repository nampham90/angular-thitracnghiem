{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/loading.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/progress-spinner\";\n\nfunction LoadingComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelement(1, \"mat-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LoadingComponent = /*#__PURE__*/(() => {\n  class LoadingComponent {\n    constructor(loadingService, cdRef) {\n      this.loadingService = loadingService;\n      this.cdRef = cdRef;\n      this.isLoadding = false;\n    }\n\n    ngOnInit() {\n      this.init();\n    }\n\n    init() {\n      this.loadingService.getLoaddingObserver().subscribe(status => {\n        this.isLoadding = status === 'start';\n        this.cdRef.detectChanges();\n      });\n    }\n\n  }\n\n  LoadingComponent.ɵfac = function LoadingComponent_Factory(t) {\n    return new (t || LoadingComponent)(i0.ɵɵdirectiveInject(i1.LoadingService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  LoadingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoadingComponent,\n    selectors: [[\"app-loading\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"loading\", 4, \"ngIf\"], [1, \"loading\"]],\n    template: function LoadingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, LoadingComponent_div_0_Template, 2, 0, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoadding);\n      }\n    },\n    dependencies: [i2.NgIf, i3.MatProgressSpinner]\n  });\n  return LoadingComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}